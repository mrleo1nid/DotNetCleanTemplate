@using DotNetCleanTemplate.Shared.Common
@using DotNetCleanTemplate.Shared.DTOs
@using MudBlazor
@using DotNetCleanTemplate.WebClient.Components
@using DotNetCleanTemplate.WebClient.Services

<MudCard Elevation="3" Class="mb-4">
    <MudCardHeader>
        <MudText Typo="Typo.h5">Список пользователей</MudText>
        <MudSpacer />
        <UserDialogManager UserManagementService="@UserManagementService" 
                          OnUserCreated="LoadUsers" />
        <MudButton Variant="Variant.Filled" 
                   Color="Color.Info" 
                   OnClick="LoadUsers"
                   Disabled="@_isLoadingUsers"
                   StartIcon="@Icons.Material.Filled.Refresh">
            Обновить
        </MudButton>
    </MudCardHeader>
    <MudCardContent>
        @if (_isLoadingUsers)
        {
            <MudProgressCircular Indeterminate="true" Class="d-flex justify-center" />
        }
        else if (_users != null && _users.Any())
        {
            <MudTable Items="@_users" Dense="true" Hover="true" Striped="true">
                <HeaderContent>
                    <MudTh>Email</MudTh>
                    <MudTh>Имя пользователя</MudTh>
                    <MudTh>Роли</MudTh>
                    <MudTh>Действия</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Email</MudTd>
                    <MudTd>@context.UserName</MudTd>
                    <MudTd>
                        <UserRolesDisplay User="@context" />
                    </MudTd>
                    <MudTd>
                        <UserActions User="@context" 
                                    IsDeleting="@_isDeletingUser"
                                    OnUserDeleted="LoadUsers"
                                    OnUserUpdated="LoadUsers"
                                    UserManagementService="@UserManagementService" />
                    </MudTd>
                </RowTemplate>
            </MudTable>
            
            <UserPagination TotalPages="@_totalUserPages" 
                           CurrentPage="@_currentUserPage"
                           OnPageChanged="OnUserPageChanged" />
        }
        else
        {
            <MudText Typo="Typo.body1" Color="Color.Secondary" Class="text-center">
                Нет данных для отображения
            </MudText>
        }
    </MudCardContent>
</MudCard>

@code {
    [Inject] private IUserManagementService UserManagementService { get; set; } = default!;

    private bool _isLoadingUsers = false;
    private bool _isDeletingUser = false;
    private List<UserWithRolesDto>? _users;
    
    // Пейджинг для пользователей
    private int _currentUserPage = 1;
    private readonly int _userPageSize = 10;
    private int _totalUserPages = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        _isLoadingUsers = true;
        StateHasChanged();

        try
        {
            var result = await UserManagementService.LoadUsersAsync(_currentUserPage, _userPageSize);
            
            if (result.IsSuccess && result.Value != null)
            {
                _users = result.Value.Items;
                _totalUserPages = result.Value.TotalPages;
            }
        }
        finally
        {
            _isLoadingUsers = false;
            StateHasChanged();
        }
    }

    // Методы навигации для пользователей
    private async Task OnUserPageChanged(int page)
    {
        _currentUserPage = page;
        await LoadUsers();
    }
} 